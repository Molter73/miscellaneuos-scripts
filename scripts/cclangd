#!/usr/bin/env bash

# The name of the container to run `clangd` in must be passed as the first and only argument
#
# This is based off the name of the buffer and the repository, etc. it is in, so even if we
# don't end up attaching to a container, it will still be passed
[ "$#" -ne 1 ] && echo "Container name required as first and only argument" >&2 && exit 1

NAME=$1
NPROC="$(nproc)"

# Verify that a contianer by this name actually exists, and is running
if [[ "$(kubectl get -l app="$NAME-builder" -o=jsonpath='{.items[0].status.phase}' pods)" == "Running" ]]; then
    pod="$(kubectl get -l app="$NAME-builder" -o=jsonpath='{.items[0].metadata.name}' pods)"
    kubectl exec -i "$pod" -- clangd -j "${NPROC}" --background-index --clang-tidy 2>/dev/null
elif [ -z "$(docker ps -q -f name="$NAME" -f status=running)" ]; then
    clangd --background-index --clang-tidy -j "${NPROC}"
else
    # Important part here is both the '-i' and the redirection of STDERR
    docker exec -i "$NAME" /usr/bin/clangd -j "${NPROC}" --background-index --clang-tidy 2>/dev/null
fi
